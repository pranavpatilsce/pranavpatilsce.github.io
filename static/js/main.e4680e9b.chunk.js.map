{"version":3,"sources":["styles/Styles.module.css","config/userData.js","components/surround/Footer.js","components/surround/Navbar.js","components/home/Landing.js","components/home/Me.js","components/home/ProjectCard.js","components/home/Projects.js","components/home/Experience.js","components/home/Education.js","components/home/Skills.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","useState","backgroundColor","bgStyle","style","className","Navbar","props","userData","firstName","isTop","setIsTop","useEffect","document","addEventListener","istop","window","scrollY","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","styles","navbarDiv","rightHeader","Landing","lastName","headline","icons","Array","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","undefined","map","key","target","rel","url","handle","image","split","onMouseOver","onMouseOut","Me","instaLink","instaQuerry","desc1","desc2","description1","description2","instagramId","myDescription","localStorage","getItem","JSON","parse","instaProfilePic","setInstaProfilePic","showInsta","setShowInsta","handleRequest","e","axios","get","then","response","graphql","user","profile_pic_url_hd","catch","error","console","message","aboutBg","meImg","src","alt","beginQuote","quotes","fullDescDiv1","endQuote","ProjectCard","updated_at","setUpdatedAt","projectData","name","svn_url","stargazers_count","date","Date","pushed_at","diff","getTime","hours","Math","trunc","toString","day","getDate","monthIndex","getMonth","year","getFullYear","projectCard","projectHeader","projDate","projectDates","projectDevParent","projDesc","projectDesc","cloneAndRepoBtnDiv","Button","cloneBtn","variant","Projects","gitHubLink","githubId","repos","gitHubQuerry","projectsArray","setProjectsArray","gitRepos","i","repoObj","includes","push","err","log","projectsPage","join","project","Experience","experience","expDisplay","setExpDisplay","item","Card","expMainCard","Body","expHeader","expCompanyAndTitle","expTitle","expCompany","expDateAndPlace","expDate","expPlace","deets","dottedLine","experiencePage","Education","education","eduDisplay","setEduDisplay","isFlippedObj","setIsFlippedObj","isChanged","setIsChanged","handleClick","preventDefault","tempObj","stringify","eduCardDivBothSides","isFlipped","indexOf","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","infinite","eduCardMain","Text","eduHeader","eduHeaderLeft","eduDegree","eduClg","eduHeaderRight","eduDeets","eduFooter","onClick","eduBtn","eduCardMainBack","eduBackHeaderLabel","course","Badge","courseBadge","educationPage","eduCardsParentParent","eduCardsParent","Skills","skills","skillsDisplay","setSkillsDisplay","skill","eachSkill","skillPage","skillsDisplayDiv","Home","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4680e9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectHeader\":\"Styles_projectHeader__28Vmh\",\"projectCard\":\"Styles_projectCard__3p33t\",\"projDesc\":\"Styles_projDesc__sEkQy\",\"navbarDiv\":\"Styles_navbarDiv__6rBd4\",\"creatorName\":\"Styles_creatorName__3G3KM\",\"rightHeader\":\"Styles_rightHeader__1w20b\",\"aboutBg\":\"Styles_aboutBg__1Rl1S\",\"projectsPage\":\"Styles_projectsPage__3otE_\",\"projectDevParent\":\"Styles_projectDevParent__V_Ri_\",\"projDate\":\"Styles_projDate__1fkBK\",\"cloneBtn\":\"Styles_cloneBtn__1Gtbc\",\"cloneAndRepoBtnDiv\":\"Styles_cloneAndRepoBtnDiv__2PqUL\",\"fullDescDiv1\":\"Styles_fullDescDiv1__oRt-r\",\"endQuote\":\"Styles_endQuote__3ozo-\",\"quotes\":\"Styles_quotes__2xHg5\",\"beginQuote\":\"Styles_beginQuote__U0vy5\",\"experiencePage\":\"Styles_experiencePage__1PYUb\",\"hr\":\"Styles_hr__2y2Ca\",\"expMainCard\":\"Styles_expMainCard__6Dk_C\",\"expHeader\":\"Styles_expHeader__2gJeR\",\"expDateAndPlace\":\"Styles_expDateAndPlace__3oDvb\",\"expCompanyAndTitle\":\"Styles_expCompanyAndTitle__1uCmt\",\"dottedLine\":\"Styles_dottedLine__2Qarm\",\"educationPage\":\"Styles_educationPage__QNdUY\",\"eduCardsParentParent\":\"Styles_eduCardsParentParent__yYYMz\",\"eduCardsParent\":\"Styles_eduCardsParent__2TyjN\",\"eduCardDivBothSides\":\"Styles_eduCardDivBothSides__1iFoY\",\"eduFooter\":\"Styles_eduFooter__4lfVu\",\"eduDegree\":\"Styles_eduDegree__nUHDF\",\"eduClg\":\"Styles_eduClg__3PPr5\",\"eduCardMain\":\"Styles_eduCardMain__WwTtE\",\"eduHeader\":\"Styles_eduHeader__18YL3\",\"eduHeaderRight\":\"Styles_eduHeaderRight__3q4yc\",\"eduDeets\":\"Styles_eduDeets__1jfs_\",\"courseBadge\":\"Styles_courseBadge__2FXOB\",\"eduBackHeaderLabel\":\"Styles_eduBackHeaderLabel__1miWk\",\"eduCardMainBack\":\"Styles_eduCardMainBack__222MF\",\"eachSkill\":\"Styles_eachSkill__2-CbW\",\"skillPage\":\"Styles_skillPage__2QILe\",\"meImg\":\"Styles_meImg__3XlDo\",\"aboutMeText\":\"Styles_aboutMeText__Fl-Jm\",\"textBoxStyle\":\"Styles_textBoxStyle__1ZqKm\"};","let userData ={\"firstName\":\"Pranav\",\"lastName\":\"Patil\",\"headline\":\"Software Engineer\",\"linkedinId\":\"pranavrpatil\",\"githubId\":\"pranavpatilsce\",\"instagramId\":\"pranav_patil_19\",\"facebookId\":null,\"twitterId\":\"pranavpatilsf\",\"mediumId\":null,\"description1\":\"I like to read about shifting trends in venture capital, technology, and geopolitics.\",\"description2\":\"My favorite podcast is All-In with Chamath, Jason, Sacks & Friedberg.\",\"githubRepos\":null,\"skills\":\"Java, C++, JavaScript, HTML, CSS, Node, React, Redux, Flask, Bootstrap, Mocha tests, Enzyme tests, MySQL, MongoDB Atlas, BigQuery, AWS EC2, load balancer, auto scaling, microservices, Kafka, Docker, Agile, software design patterns, Linux, Git, REST API, gRPC, Google Charts, Data Studio, JUnit, code reviews, unit tests, Gradle, multithreading\",\"icons\":[{\"id\":0,\"image\":\"fa-github\",\"url\":\"https://github.com/\",\"handle\":\"pranavpatilsce\",\"style\":\"socialicons\"},{\"id\":1,\"image\":\"fa-facebook\",\"url\":\"https://www.facebook.com/\",\"handle\":null,\"style\":\"socialicons\"},{\"id\":2,\"image\":\"fa-instagram\",\"url\":\"https://www.instagram.com/\",\"handle\":\"pranav_patil_19\",\"style\":\"socialicons\"},{\"id\":3,\"image\":\"fa-linkedin\",\"url\":\"https://www.linkedin.com/in/\",\"handle\":\"pranavrpatil\",\"style\":\"socialicons\"},{\"id\":4,\"image\":\"fa-twitter\",\"url\":\"https://www.twitter.com/\",\"handle\":\"pranavpatilsf\",\"style\":\"socialicons\"},{\"id\":5,\"image\":\"fa-medium\",\"url\":\"https://www.medium.com/\",\"handle\":null,\"style\":\"socialicons\"}],\"experience\":[[\"Partner Engineering Intern, Ads API\",\"Twitter\",\"May 2019 - August 2019\",\"San Francisco, CA\",[\"Built a dashboard to visualize Ads API integration and engagement across 700+ API partners in 4 API product categories.\",\"Analyzed 1TB+ of Ads API endpoint data in order to increase visibility in Twitter’s API integrator behavior and activity.\",\"Defined Ads API milestone framework covering Analytics, Audiences, Campaign Management, and Creatives API products. \\nWorked cross-functionally to understand various parts of the Ads business and learn how to drive better API engagement.\"]],[\"Software Engineering Intern\",\"Proofpoint\",\"February 2018 - August 2018\",\"Sunnyvale, CA\",[\"Used HTML, CSS, and Apex to build a reporting feature that connected customer salesforce bugs to Proofpoint’s Jira reports.\",\"Built a data visualization feature using Google Charts to track a customer’s happiness with Proofpoint over last 3 months.\",\"Prototyped an upgrade to a dashboard using Visualforce to track SLAs and SLOs based on manager and their direct reports.\\nAchieved an increase in test code coverage of >75% to qualify for Salesforce deployment standards.\"]],[\"C Programming Teacher Assistant\",\"San Jose State University\",\"June 2017 - August 2017\",\"San Jose, CA\",[\"Led embedded C programming tutoring sessions covering data structures, algorithms, memory, and state machines.\",\"Guided students in developing projects using freeRTOS SJOne ARM Cortex-M3 variant microcontroller board.\",\"Technical skills: C, data structures, microcontroller, and circuits.\\nSoft skills: explaining a concept, mentoring, and public speaking.\"]]],\"education\":[[\"Master of Science\",\"Software Engineering\",\"San Jose State University\",\"August 2019\",\"August 2021\",\"San Jose, CA\",[\"Graduating in August 2021\",\"Concentration: Distributed Systems\",\"Building some projects and learning about startups and venture capital.\"],[\"Cloud Technologies\",\" Machine Learning\",\" Enterprise Distributed Systems\",\" Web Development\",\" Enterprise Applications\",\" Software Systems Design\",\" Software Security Technologies\"]],[\"Bachelor of Science\",\"Computer Engineering\",\"San Jose State University\",\"August 2015\",\"August 2019\",\"San Jose, CA\",[\"Development Lead - Software & Computer Engineering Society - August 2018 to July 2019\",\"VP - Software & Computer Engineering Society - August 2017 to July 2018\",\"Officer - Software & Computer Engineering Society - August 2016 to July 2017\"],[\"Computer Networks\",\" Database Design\",\" Object Oriented Design\",\" Real Time Operating Systems\",\" Advanced Algorithms\",\" Data Structures\",\" Microprocessor Design\"]]],\"repos\":[\"Distributed-File-Storage-System-P2P-Overlay-Network\",\"TwitterSJSU\",\"SarcasmDetect\",\"MTaaS\"],\"projectDates\":{\"Distributed-File-Storage-System-P2P-Overlay-Network\":\"April 2020 - May 2020\",\"TwitterSJSU\":\"October 2019 - December 2019\",\"SarcasmDetect\":\"October 2019 - December 2019\",\"MTaaS\":\"February 2020 - May 2020\"},\"projectDesc\":{\"Distributed-File-Storage-System-P2P-Overlay-Network\":[\"Researched and built dynamically balanced overlay networks with Flask and gRPC and deployed it on AWS.\",\"Wrote and tested Proto3 files to transmit audio, video, image, and documents on the network.\\nWorked with a student to build the UI and gRPC APIs in Flask to upload, search, and download files across the network.\"],\"TwitterSJSU\":[\"Used React, Node, Kafka, and MongoDB to build a clone of Twitter as a class project with 4 other team members.\",\"Was primarily responsible for frontend development of profile, tweets, home feed, lists, login, and signup in React.\"],\"SarcasmDetect\":[\"Built the React frontend and Flask APIs to process and run RNN LSTM network and deployed the project with Docker to AWS.\",\"Used LSTM for sarcasm detection of topics using Twitter API and showed NER analysis of the sarcasm in Tableau Online.\"],\"MTaaS\":[\"Built an iOS and Android testing and emulation service using AWS Device Farm and Genymotion (Appium) with 3 students.\",\"Built the React frontend of various pages (landing, login, homepage, etc) and set the frontend architecture of the project.\\nWrote APIs in Node.js for the bug reporting feature and helped integrate React components into the larger project.\"]}}\n module.exports= userData;","import React, { useState } from \"react\";\n\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return <footer style={bgStyle} className=\"mt-auto py-3 text-center\"></footer>;\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Navbar = (props) => {\n  let { firstName } = userData;\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const istop = window.scrollY < 200;\n      if (istop !== isTop) {\n        setIsTop(istop);\n      }\n    });\n  }, [isTop]);\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\n      } `}\n    >\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        Home\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <div className={styles.navbarDiv}>\n          <div>\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/#aboutme\"}\n                >\n                  Me\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/#experience\"}\n                >\n                  Experience\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/#projects\"}\n                >\n                  Projects\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/#education\"}\n                >\n                  Education\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/#skills\"}\n                >\n                  Skills\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className={styles.rightHeader}></div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport Typist from \"react-typist\";\nimport userData from \"../../config/userData\";\n\nconst Landing = (props) => {\n  let { firstName, lastName, headline, icons } = userData;\n  icons = icons == null ? [] : icons;\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1\">\n            {(firstName == null ? \"\" : firstName) +\n              \" \" +\n              (lastName == undefined ? \"\" : lastName)}\n          </h1>\n          <Typist className=\"lead\"> {headline}</Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) =>\n              icon[\"handle\"] != \"\" ? (\n                <a\n                  key={icon.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={icon.url + \"\" + icon.handle}\n                  aria-label={`My ${icon.image.split(\"-\")[1]}`}\n                >\n                  <i\n                    className={`fab ${icon.image}  fa-3x ${\n                      hoverstatus[icon.id]\n                    }`}\n                    onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                    onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                  />\n                </a>\n              ) : null\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Me = () => {\n  let {\n    instaLink,\n    instaQuerry,\n    description1,\n    description2,\n    instagramId,\n  } = userData;\n  let desc1, desc2;\n  let myDescription = [];\n\n  instaLink = \"https://www.instagram.com/\";\n  instaQuerry = \"/?__a=1\";\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    desc1 = JSON.parse(localStorage.getItem(\"userData\"))[\"description1\"];\n    desc2 = JSON.parse(localStorage.getItem(\"userData\"))[\"description2\"];\n    myDescription =\n      (desc1 == \"\" || desc1 == null) && (desc2 == \"\" || desc2 == null)\n        ? myDescription\n        : [desc1, desc2];\n    instagramId =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == \"\"\n        ? instagramId\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"];\n  } else {\n    myDescription =\n      (description1 == \"\" || description1 == null) &&\n      (description2 == \"\" || description1 == null)\n        ? myDescription\n        : [description1, description2];\n  }\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\n  const [showInsta, setShowInsta] = useState(true);\n\n  useEffect(() => {\n    if (showInsta) {\n      handleRequest();\n    } else {\n      setInstaProfilePic(\n        \"https://lh3.googleusercontent.com/proxy/rHjhatFG9wFQciNqzUG19Wc7NoBb4RidNURhduWyvs5euim-Uc6unJD0qeQI9qSDAwbSwB_ZEl70E9eBiW9Ee2A\"\n      );\n    }\n  }, [showInsta, instagramId]);\n\n  const handleRequest = (e) => {\n    axios\n      .get(instaLink + instagramId + instaQuerry)\n      .then((response) => {\n        //console.log(\"response.data\", response.data);\n        return setInstaProfilePic(\n          response.data.graphql.user.profile_pic_url_hd\n        );\n      })\n      .catch((error) => {\n        setShowInsta(false);\n        return console.error(error.message);\n      });\n  };\n\n  return (\n    <div id=\"aboutme\" className={styles.aboutBg}>\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          {showInsta && (\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\n              <img\n                className={styles.meImg}\n                src={instaProfilePic}\n                alt=\"profilepicture\"\n              />\n            </div>\n          )}\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\n            <h1 className=\"display-4 mb-5 text-center\"> Me</h1>\n            <div className={styles.beginQuote}>\n              <h1 className={styles.quotes}>⅂</h1>\n            </div>\n            <div className={styles.fullDescDiv1}>{myDescription[0]}</div>\n            <br />\n            <div className={styles.fullDescDiv1}>{myDescription[1]}</div>\n            <div className={styles.endQuote}>\n              <h1 className={styles.quotes}>⅃</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Me;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport classes from \"../../styles/Styles.module.css\";\n\nconst ProjectCard = (props) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n  const { name, svn_url, stargazers_count } = props.projectData;\n\n  useEffect(() => {\n    const date = new Date(props.projectData.pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      return setUpdatedAt(`${hours.toString()} hours ago`);\n    } else {\n      const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      const day = date.getDate();\n      const monthIndex = date.getMonth();\n      const year = date.getFullYear();\n      return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n    }\n  }, [props.projectData.pushed_at]);\n\n  return (\n    <div className=\"col-md-6\">\n      <div>\n        <div className={styles.projectCard}>\n          <div className=\"card-body\">\n            <div className={styles.projectHeader}>\n              <h6>{name} </h6>\n              <h6 className={styles.projDate}>{props.projectDates[name]}</h6>\n            </div>\n            <hr />\n            <div className={styles.projectDevParent}>\n              <ul>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][0]\n                      : null}\n                  </div>\n                </li>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][1]\n                      : null}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div className={styles.cloneAndRepoBtnDiv}>\n              <Button\n                href={`${svn_url}/archive/master.zip`}\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> Clone Project\n              </Button>\n              <Button\n                href={svn_url}\n                target=\" _blank\"\n                variant=\"success\"\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> View Repo\n              </Button>\n            </div>\n            <hr />\n            <p className=\"card-text\">\n              <span className=\"text-dark card-link mr-4\">\n                <i className=\"fab fa-github\" /> Stars{\" \"}\n                <span className=\"badge badge-dark\">{stargazers_count}</span>\n              </span>\n              <small className=\"text-muted\">Updated {updated_at}</small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Projects = () => {\n  let {\n    gitHubLink,\n    githubId,\n    gitHubQuerry,\n    repos,\n    projectDesc,\n    projectDates,\n  } = userData;\n  const [projectsArray, setProjectsArray] = useState([]);\n  gitHubLink = \"https://api.github.com/users/\";\n  gitHubQuerry = \"/repos\";\n  useEffect(() => {\n    axios\n      .get(gitHubLink + githubId + gitHubQuerry)\n      .then((response) => {\n        let gitRepos = [];\n        for (let i in response.data) {\n          let repoObj = response.data[i];\n          if (repos.includes(repoObj[\"name\"])) gitRepos.push(repoObj);\n        }\n        setProjectsArray(gitRepos);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div id=\"projects\" className={[styles.projectsPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Projects</h1>\n        <div className=\"row\">\n          {projectsArray.map((project) => (\n            <ProjectCard\n              projectData={project}\n              projectDesc={projectDesc}\n              projectDates={projectDates}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Experience = () => {\n  let { experience } = userData;\n  const [expDisplay, setExpDisplay] = useState([]);\n\n  useEffect(() => {\n    //console.log(\"experience\", experience);\n    setExpDisplay(\n      experience == null\n        ? null\n        : experience.map((item) => {\n            //console.log(\"experience item\", item);\n            return (\n              <>\n                <Card className={styles.expMainCard}>\n                  <Card.Body>\n                    <div className={styles.expHeader}>\n                      <div className={styles.expCompanyAndTitle}>\n                        <div className={styles.expTitle}>\n                          <b>{item[0]}</b>\n                        </div>\n                        ,&nbsp;\n                        <div className={styles.expCompany}>{item[1]}</div>\n                      </div>\n                      <div className={styles.expDateAndPlace}>\n                        <div className={styles.expDate}>{item[2]} &nbsp;</div>\n                        <div>{\"|\"}</div>\n                        <div className={styles.expPlace}> &nbsp; {item[3]}</div>\n                      </div>\n                    </div>\n                    <hr />\n                    <ul>\n                      {item[4].map((deets) => {\n                        return <li>{deets}</li>;\n                      })}\n                    </ul>\n                  </Card.Body>\n                </Card>\n                <div className={styles.dottedLine}>\n                  <div>.</div>\n                  <div>.</div>\n                  <div>.</div>\n                </div>\n              </>\n            );\n          })\n    );\n  }, []);\n\n  return (\n    <>\n      <div id=\"experience\" className={[styles.experiencePage].join(\",\")}>\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">Experience</h1>\n          <div className=\"row\">{expDisplay}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Experience;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Education = () => {\n  let { education } = userData;\n  const [eduDisplay, setEduDisplay] = useState([]);\n  const [isFlippedObj, setIsFlippedObj] = useState({});\n  const [isChanged, setIsChanged] = useState();\n\n  const handleClick = (e, i) => {\n    e.preventDefault();\n    let tempObj = isFlippedObj;\n    tempObj[i] = !tempObj[i];\n    setIsFlippedObj(tempObj);\n    setIsChanged(JSON.stringify(tempObj));\n  };\n\n  useEffect(() => {\n    let tempObj = {};\n    for (let i in education) {\n      tempObj[i] = false;\n    }\n    setIsFlippedObj(tempObj);\n  }, []); //to set original flip state\n\n  useEffect(() => {\n    //console.log(\"education\", education);\n    setEduDisplay(\n      education == null\n        ? null\n        : education.map((item) => {\n            //console.log(\"education item\", item);\n            return (\n              <div className={styles.eduCardDivBothSides}>\n                <ReactCardFlip\n                  isFlipped={isFlippedObj[education.indexOf(item)]}\n                  flipDirection=\"horizontal\"\n                  flipSpeedBackToFront=\"0.3\"\n                  flipSpeedFrontToBack=\"0.3\"\n                  infinite=\"true\"\n                >\n                  <div>\n                    <Card>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          <div className={styles.eduHeader}>\n                            <div className={styles.eduHeaderLeft}>\n                              <div className={styles.eduDegree}>\n                                <b>\n                                  {item[0]}, {item[1]}\n                                </b>\n                              </div>\n                              <div className={styles.eduClg}>{item[2]}</div>\n                            </div>\n                            <div className={styles.eduHeaderRight}>\n                              <div>\n                                {item[3]} - {item[4]}\n                              </div>\n                              <div> {item[5]}</div>\n                            </div>\n                          </div>\n                        </Card.Text>\n                        <Card.Text>\n                          <ul className={styles.eduDeets}>\n                            {item[6].map((deets) => {\n                              return <li>{deets}</li>;\n                            })}\n                          </ul>\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) =>\n                                handleClick(e, education.indexOf(item))\n                              }\n                              className={styles.eduBtn}\n                            >\n                              See Courses\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n\n                  <div>\n                    <Card className={styles.eduCardMainBack}>\n                      <div className={styles.eduBackHeaderLabel}>\n                        <h4>Courses</h4>\n                      </div>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          {item[7].map((course) => {\n                            return (\n                              <Badge className={styles.courseBadge}>\n                                {course}\n                              </Badge>\n                            );\n                          })}\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) => {\n                                handleClick(e, education.indexOf(item));\n                              }}\n                              className={styles.eduBtn}\n                            >\n                              Back\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                </ReactCardFlip>\n              </div>\n            );\n          })\n    );\n  }, [isChanged]);\n\n  return (\n    <div id=\"education\" className={[styles.educationPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Education</h1>\n      </div>\n      <div className={styles.eduCardsParentParent}>\n        <div className={styles.eduCardsParent}>{eduDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Skills = () => {\n  let { skills } = userData;\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    skills =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == \"\"\n        ? skills\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"].split(\",\");\n  } else skills = skills.split(\",\");\n  const [skillsDisplay, setSkillsDisplay] = useState([]);\n\n  useEffect(() => {\n    setSkillsDisplay(\n      skills.map((skill) => {\n        return <Badge className={styles.eachSkill}>{skill}</Badge>;\n      })\n    );\n  }, []);\n  return (\n    <div id=\"skills\" className={[styles.skillPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Skills</h1>\n\n        <div className={styles.skillsDisplayDiv}>{skillsDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport Landing from \"../components/home/Landing\";\nimport Me from \"../components/home/Me\";\nimport Projects from \"../components/home/Projects\";\nimport Experience from \"../components/home/Experience\";\nimport Education from \"../components/home/Education\";\nimport Skills from \"../components/home/Skills\";\n\nconst Home = (props) => {\n  return (\n    <>\n      <Landing isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Me isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Experience\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Projects isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Education\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Skills isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport Footer from \"./components/surround/Footer\";\nimport Navbar from \"./components/surround/Navbar\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Home />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}